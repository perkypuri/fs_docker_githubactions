version: "3.9"

services:
  mysqldb:
    container_name: mysql-db
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dbdockeraws
    ports:
      - "3307:3306"   # map host 3307 to container 3306 to avoid conflicts
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - springboot-react-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    container_name: fs_dockeraws_backend
    build:
      context: ./fs_dockeraws_backend
      dockerfile: ../fs_dockerfiles/backend.Dockerfile
    image: fs-dockeraws-backend:latest
    ports:
      - "2001:2000"  # maps container port 2000 to host 2001
    depends_on:
      mysqldb:
        condition: service_healthy
    restart: on-failure
    networks:
      - springboot-react-network

  frontend:
    container_name: fs_dockeraws_frontend
    build:
      context: ./fs_dockeraws_frontend
      dockerfile: ../fs_dockerfiles/frontend.Dockerfile
    image: fs-dockeraws-frontend:latest
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - springboot-react-network

# Persistent volume for MySQL
volumes:
  mysql-data:

# Custom bridge network
networks:
  springboot-react-network:
    driver: bridge
